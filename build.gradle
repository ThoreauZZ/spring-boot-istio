buildscript {
    ext {
        kotlin_version = '1.2.61'
        spring_boot_version = '1.5.4.RELEASE'
        gradleDockerVersion   = "1.2"
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "se.transmode.gradle:gradle-docker:${gradleDockerVersion}"
    }
}
allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }

}
subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: "kotlin-spring"
    apply plugin: 'org.springframework.boot'
    apply plugin: 'docker'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        compile 'org.springframework.boot:spring-boot-starter-web'
        compile 'org.springframework.boot:spring-boot-starter-actuator'
        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile("junit:junit")
    }

    task buildDocker(type: Docker) {
        baseImage = 'openjdk:8-jdk-alpine'
        //runCommand('apk add --no-cache curl')
        push = project.hasProperty('push')
        tagVersion = jar.version
        addFile {
            from jar
            rename {'app.jar'}
        }
        //setEnvironment('JAVA_OPTS',' ')
        entryPoint(['java', '$JAVA_OPTS', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
    }
    buildDocker.dependsOn(build)
}